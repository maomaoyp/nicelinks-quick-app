<template>
  <div class="home-page">
    <TitleBar home=true @menu-click="onMenuClick" title="倾城之链">
      <input class="title-bar-button search" type="button" @click='search' />
    </TitleBar>
    <tabs onchange="onChangeTabIndex" index="{{currentIndex}}" if="{{isShowTabs}}">
      <tab-bar class="tab-bar" mode="scrollable">
        <stack class="tab-item-warp" for="(index, item) in tabBarList">
          <text class="tab-item {{index===currentIndex ? 'active' : ''}}">{{item.name}}</text>
          <div if="index===currentIndex" class="line"></div>
        </stack>
      </tab-bar>
      <tab-content class="tab-content">
        <div class="tab-content-section" for="(index, $item) in tabBarList">
          <TabItem pdata="{{$item}}" if="index===currentIndex"></TabItem>
        </div>
      </tab-content>
    </tabs>
    <div show="{{isShowSidebar}}" class="mask" @click="hideSidebar"></div>
    <Sidebar open="{{isShowSidebar}}" @hide-sidebar="hideSidebar"></Sidebar>
  </div>
</template>

<import name="TitleBar" src="./../../components/TitleBar"></import>
<import name="Sidebar" src="./../../components/Sidebar"></import>

<script>
  import prompt from '@system.prompt'
  export default {
    private: {
      currentIndex: 0,
      tabBarList: [
        {
          name: '热门',
          sortTarget: 'likes',
          sortType: -1
        },
        {
          name: '最新',
          sortTarget: 'created',
          sortType: -1
        },
        {
          name: '最早',
          sortTarget: 'created',
          sortType: 1
        },
        {
          name: '冷门',
          sortTarget: 'likes',
          sortType: 1
        }
      ],
      isShowTabs: true,
      isShowSidebar: false
    },
    onInit() {
      // this.requestMoreData()
    },
    onShow() {
    },
    onBackPress() {
    },
    onMenuPress() {
      $utils.showMenu()
    },
    /* -----------------onCallBackEvent----------------- */
    hideSidebar() {
      this.isShowSidebar = false
    },
    onWatchCurrentIndex(newValue, oldValue) {
    },
    onMenuClick() {
      this.isShowSidebar = true
    },
    onChangeTabIndex(evt) {
      this.currentIndex = evt.index
    }
  }
</script>

<import name="TabItem" src="./../../components/TabItem"></import>

<style lang="less">
@import './../../assets/styles/style.less';

.home-page {
  flex: 1;
  flex-direction: column;
  .title-bar-button {
    align-self: center;
    width: 6 * @size-factor;
    height: 6 * @size-factor;
    margin: 0 @size-factor;
    :active{
      height: 7 * @size-factor;
    }
  }
  .search {
    background-image: url('./../../assets/icons/search.png');
  }
  .tab-bar {
    height: @tab-bar-height;
    background-color: #ffffff;
    border-top-width: 1px;
    border-bottom-width: 1px;
    border-color: @border-grey;

    .tab-item-warp {
      flex: 1;
      flex-direction: column;
      align-items: center;
      justify-content: flex-end;
      color: @grey;

      text {
        width: 20 * @size-factor;
        height: @tab-bar-height;
        line-height: @tab-bar-height;
        font-size: 4.5 * @size-factor;
        color: #71777d;
        text-align: center;
      }

      .active {
        color: @brand;
        font-size: 5 * @size-factor;
      }

      .line {
        height: 4px;
        width: 50%;
        background-color: #424242;
      }
    }
  }
  .tab-content {
    flex: 1;
    .load-more {
      .flex-box-mixins(row, center, center);
      margin-bottom: 2 * @size-factor;

      .progress {
        text-align: right;
      }

      .loading-tip {
        text-align: left;
      }
    }
  }
  .mask {
    height: 100%;
    width: 100%;
  }
}
</style>